/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_map__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/map */ "./js/modules/map.js");
/* harmony import */ var _modules_init_select__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/init-select */ "./js/modules/init-select.js");
/* harmony import */ var _modules_init_label__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/init-label */ "./js/modules/init-label.js");
/* harmony import */ var _modules_form_validate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/form-validate */ "./js/modules/form-validate.js");
// import {iosVhFix} from './utils/ios-vh-fix';
// import {initModals} from './modules/modals/init-modals';





// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------

  // iosVhFix();

  // Modules
  // ---------------------------------

  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {
    // initModals();
    Object(_modules_map__WEBPACK_IMPORTED_MODULE_0__["initMap"])();
    Object(_modules_init_label__WEBPACK_IMPORTED_MODULE_2__["initLabel"])();
    Object(_modules_init_select__WEBPACK_IMPORTED_MODULE_1__["initSelect"])();
    Object(_modules_form_validate__WEBPACK_IMPORTED_MODULE_3__["formValidate"])();
  });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используейтся matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

/***/ }),

/***/ "./js/modules/form-validate.js":
/*!*************************************!*\
  !*** ./js/modules/form-validate.js ***!
  \*************************************/
/*! exports provided: formValidate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formValidate", function() { return formValidate; });
var formValidate = function formValidate() {
  var valideteForm = $('.basket__form').validate({
    rules: {
      address: {
        required: true
        // minlength: 2
      },

      name: {
        required: true
        // minlength: 2
      },

      email: {
        required: true,
        email: true
        // minlength: 5
      },

      selectValue: {
        required: true
      }
    },
    messages: {
      radio: 'This is a required field',
      address: {
        required: 'Ошибка ввода'
        // minlength: 2
      },

      name: {
        required: 'Ошибка ввода',
        minlength: 'Короткое имя'
      },
      email: {
        required: 'Ошибка ввода',
        // minlength: "Поле должно быть более 5-ти символов",
        email: 'Неверный синтаксис email'
      },
      selectValue: {
        required: 'Ошибка ввода. Выберите тип упаковки'
      }
    },
    // errorElement: "div",

    submitHandler: function submitHandler(form) {
      console.log($('input[name="packagingType"]').val());
      var dataForm = $(".basket__form").serialize();
      console.log(dataForm);
      form.reset();
      // $("#form").serialize()
      // form.submit();
    },

    // errorPlacement: function(error, element) {
    //     var item = element.parents('.basket__fieldset');
    //     item.append(error);
    // },

    // success: function(label) {
    //   label.addClass("valid").text("Ok!")
    // },

    highlight: function highlight(element, errorClass, validClass) {
      // console.log(element);
      $(element).add($(element).parent()).addClass("is-invalid");
      // $(element).addClass(errorClass).removeClass(validClass);
      // $(element.form).find("label[for=" + element.id + "]")
      //   .addClass(errorClass);
    },

    unhighlight: function unhighlight(element, errorClass) {
      $(element).add($(element).parent()).removeClass("is-invalid");
    }

    // element: 'form',
    // errorClass: 'error',

    //   showErrors: function(errorMap, errorList) {
    //     $("#summary").html("Your form contains "
    //       + this.numberOfInvalids()
    //       + " errors, see details below.");
    //     this.defaultShowErrors();
    //   }

    // myErrors: function(element) {
    //   if(element.val() === '') {
    //     console.log('oshibkii');
    //   } else {
    //     console.log('net oshibok');
    //   };
    // },
  });

  // $.validator.addMethod("map", function (value, element, params) {
  //   return (value) ? true : false;
  // });

  // $.validator.addClassRules({
  //   selectValidation: {
  //     required: true,
  //   },
  // });

  //   $('input[name="selectValue"]').addClass('flowerValidation').change(function(e) {
  //     $('form').validate().element($(e.target));
  // });
  // validateForm.submit();

  // var validator =  $('.basket__form').validate();
  // valideteForm.element($('.basket__selected-value'));

  $('input[name="packagingType"]').click(function (evt) {
    valideteForm.element($('.basket__selected-value'));
  });
};


/***/ }),

/***/ "./js/modules/init-label.js":
/*!**********************************!*\
  !*** ./js/modules/init-label.js ***!
  \**********************************/
/*! exports provided: initLabel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initLabel", function() { return initLabel; });
var initLabel = function initLabel() {
  var $formInputs = $('.basket__input-label input');
  $formInputs.each(function () {
    $(this).on("input", function () {
      var val = $(this).val();
      if (val !== '') {
        $(this).parent().addClass('is-fielld');
        console.log('est');
      } else {
        console.log('net');
        $(this).parent().removeClass('is-fielld');
      }
    });
  });
};


/***/ }),

/***/ "./js/modules/init-select.js":
/*!***********************************!*\
  !*** ./js/modules/init-select.js ***!
  \***********************************/
/*! exports provided: initSelect */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initSelect", function() { return initSelect; });
var initSelect = function initSelect() {
  $('[data-button-select]').click(function (evt) {
    evt.preventDefault();
    evt.stopPropagation();
    $(this).toggleClass('is-active');
    // $('[data-select]').show();
    $('[data-select]').toggleClass('is-visible');
    $(this).addClass('is-selected');
  });
  function closeSelect() {
    $('[data-select]').removeClass('is-visible');
    // $('[data-select]').hide();
    $('[data-button-select]').removeClass('is-active');
  }
  $('input[name="packagingType"]').click(function (evt) {
    evt.stopPropagation();
    // $('.basket__selected-value').submit();
    $('[data-button-select] .basket__select-title').text($(this).find(' +.basket__select-option').text());
    var selectValue = $(this).val();
    $('.basket__selected-value').val(selectValue);
    // let ddd = $('.basket__selected-value').val();
    // console.log(ddd);
    $('[data-button-select]').focus();
    closeSelect();

    // $('[data-select]').removeClass('is-visible');
    // $('[data-button-select]').removeClass('is-active');
  });

  $(document).click(function (evt) {
    if (evt.target !== $('[data-button-select]') || evt.target !== $('input[name="packagingType"]')) {
      closeSelect();
      // $('[data-select]').removeClass('is-visible');
      // $('[data-button-select]').removeClass('is-active');
    }
  });

  $(document).keydown(function (e) {
    if (e.key === "Escape" || e.keyCode === 27) {
      closeSelect();
    }
  });
};


/***/ }),

/***/ "./js/modules/map.js":
/*!***************************!*\
  !*** ./js/modules/map.js ***!
  \***************************/
/*! exports provided: initMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initMap", function() { return initMap; });
// const mapContainer = document.querySelector('#map');

var initMap = function initMap() {
  var mapContainer = $('#map').get(0);
  if (!mapContainer) {
    return;
  }
  var ymaps = window.ymaps;
  var placemark;
  var map;
  if (!ymaps) {
    return;
  }
  var showResult = function showResult(obj) {
    // Удаляем сообщение об ошибке, если найденный адрес совпадает с поисковым запросом.
    $('#suggest').removeClass('is-invalid-address');
    $('#suggest').parent().removeClass('is-invalid-address');
    $('#notice').css('display', 'none');

    // const mapContainer = $('#map');
    var bounds = obj.properties.get('boundedBy');
    // Рассчитываем видимую область для текущего положения пользователя.
    var mapState = ymaps.util.bounds.getCenterAndZoom(bounds, [mapContainer.clientWidth, mapContainer.clientHeight]);
    // Сохраняем полный адрес для сообщения под картой.
    var address = [obj.getAddressLine()].join(', ');
    // Сохраняем укороченный адрес для подписи метки.
    var shortAddress = [obj.getThoroughfare(), obj.getPremiseNumber(), obj.getPremise()].join(' ');
    // Убираем контролы с карты.
    mapState.controls = [];
    // Создаём карту.
    createMap(mapState, address);
    // Выводим сообщение под картой.
    $('#suggest').val(address);
    console.log(address);
    showMessage(address);
  };
  var showError = function showError(message) {
    $('#suggest').addClass('is-invalid-address');
    $('#suggest').parent().addClass('is-invalid-address');
    // $('#suggest').parent().append('<label[for=' + $('#suggest').id + ']> Ошибкаааа <label/>');
    $('#notice').text(message);
    $('#notice').css('display', 'block');
    // Убираем метку
    if (placemark) {
      placemark.geometry.setCoordinates(null, null);
    }
  };
  var createMap = function createMap(state, caption) {
    // Если карта еще не была создана, то создадим ее и добавим метку с адресом.
    if (!placemark) {
      map.setCenter(state.center, state.zoom);
      // map = new ymaps.Map('map', state);
      placemark = new ymaps.Placemark(map.getCenter(), {
        iconCaption: caption,
        balloonContent: caption
      }, {
        preset: 'islands#redDotIconWithCaption'
      });
      map.geoObjects.add(placemark);
      // Если карта есть, то выставляем новый центр карты и меняем данные и позицию метки в соответствии с найденным адресом.
    } else {
      map.setCenter(state.center, state.zoom);
      placemark.geometry.setCoordinates(state.center);
      placemark.properties.set({
        iconCaption: caption,
        balloonContent: caption
      });
    }
  };
  var showMessage = function showMessage(message) {
    // $('#suggest').val(message);
    $('#messageHeader').text('Данные получены:');
    $('#message').text(message);
  };
  var geocode = function geocode() {
    // Забираем запрос из поля ввода.
    var request = $('#suggest').val();
    // Геокодируем введённые данные.
    ymaps.geocode(request).then(function (res) {
      var obj = res.geoObjects.get(0);
      var error;
      var hint;
      if (obj) {
        // Об оценке точности ответа геокодера можно прочитать тут: https://tech.yandex.ru/maps/doc/geocoder/desc/reference/precision-docpage/
        switch (obj.properties.get('metaDataProperty.GeocoderMetaData.precision')) {
          case 'exact':
            break;
          case 'number':
          case 'near':
          case 'range':
            error = 'Неточный адрес, требуется уточнение';
            hint = 'Уточните номер дома';
            break;
          case 'street':
            error = 'Неполный адрес, требуется уточнение';
            hint = 'Уточните номер дома';
            break;
          case 'other':
          default:
            error = 'Неточный адрес, требуется уточнение';
            hint = 'Уточните адрес';
        }
      } else {
        error = 'Адрес не найден';
        hint = 'Уточните адрес';
      }

      // Если геокодер возвращает пустой массив или неточный результат, то показываем ошибку.
      if (error) {
        showError(error);
        showMessage(hint);
      } else {
        showResult(obj);
      }
    }, function (e) {
      // console.log(e)
    });
  };
  ymaps.ready(function () {
    map = new ymaps.Map(mapContainer, {
      // При инициализации карты обязательно нужно указать
      // её центр и коэффициент масштабирования.
      center: [55.76, 37.64],
      // Москва
      zoom: 10,
      controls: []
    }, {
      searchControlProvider: 'yandex#search'
    });

    // let placemark;

    // Подключаем поисковые подсказки к полю ввода.
    // const suggestView = new ymaps.SuggestView('suggest');

    // При клике по кнопке запускаем верификацию введёных данных.

    // const btn = document.querySelector('#button');
    // btn.addEventListener('click', () => {
    //   geocode();
    // });
    $('#button').on('click', function (e) {
      geocode();
    });
    $('#suggest').on('input', function (e) {
      $('#suggest').removeClass('is-invalid-address');
      $('#suggest').parent().removeClass('is-invalid-address');
      $('#notice').css('display', 'none');
    });

    // $('#suggest').on('focusout', function (e) {
    //   geocode();
    // });

    $('#suggest').on('change', function (e) {
      geocode();
    });
  });
};


/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map